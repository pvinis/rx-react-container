{"version":3,"file":"rx-react-container.esm.js","sources":["../src/RxContainer.js","../src/combineLatestObj.js","../src/combineProps.js","../src/createContainer.js","../src/connect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class RxContainer extends React.Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.observable !== prevState.observable) {\n      return {\n        props: nextProps.initialState,\n        observable: nextProps.observable,\n      };\n    }\n    return null;\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = { props: props.initialState, observable: props.observable };\n    this.subscription = null;\n  }\n\n  componentDidMount() {\n    // create subscription in componentDidMount instead of componentWillMount\n    // because componentWillUnmount is not called server-side\n    // which in many cases will result in memory leak\n    this.subscription = this.state.observable.subscribe(props => {\n      this.setState({ props });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.observable !== this.state.observable) {\n      this.subscription.unsubscribe();\n      this.subscription = this.props.observable.subscribe(props => {\n        this.setState({ props });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    return React.createElement(this.props.component, this.state.props);\n  }\n}\n\nRxContainer.propTypes = {\n  component: PropTypes.func.isRequired,\n  observable: PropTypes.object.isRequired,\n  initialState: PropTypes.object.isRequired,\n};\n","import { combineLatest } from 'rxjs';\n\nexport function combineLatestObj(obj) {\n  const sources = [];\n  const keys = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in obj) {\n    /* istanbul ignore else  */\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      keys.push(key.replace(/\\$$/, ''));\n      sources.push(obj[key]);\n    }\n  }\n  return combineLatest(sources, (...args) => {\n    const combination = {};\n    for (let i = args.length - 1; i >= 0; i -= 1) {\n      combination[keys[i]] = args[i];\n    }\n    return combination;\n  });\n}\n","import { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { combineLatestObj } from './combineLatestObj';\n\n/**\n * Creates observable combining values from observables, observers(as callbacks) and plain object\n * resulting in Observable of properties to be rendered with react component.\n *\n * @param {Object.<string, Observable>} observables=\n * @param {Object.<string, Observer>} observers=\n * @param {Object} props=\n */\nexport function combineProps(observables, observers, props) {\n  const baseProps = Object.assign({}, props);\n\n  if (observers) {\n    Object.keys(observers).forEach(key => {\n      baseProps[key.replace(/\\$$/, '')] = value => {\n        observers[key].next(value);\n      };\n    });\n  }\n\n  if (observables && Object.keys(observables).length > 0) {\n    return combineLatestObj(observables).pipe(\n      map(newProps => Object.assign({}, baseProps, newProps))\n    );\n  }\n\n  return of(baseProps);\n}\n","import React from 'react';\n\nimport { defer } from 'rxjs';\nimport { tap, mapTo, distinctUntilChanged, share } from 'rxjs/operators';\n\nimport { RxContainer } from './RxContainer';\nimport { combineProps } from './combineProps';\n\n/**\n * @deprecated Deprecated in favor of `connect`\n * Creates observable of functions that will create react virtual dom.\n *\n * Parameters:\n *\n *  - `Component` react component to wrap\n *  - `observables` observables with data for component\n *  - `observers` observers to be passed as callbacks to component\n *  - `props` props to pass directly to component\n *\n *  In `observers` and `observables` key names it supports `$`\n *  suffix popularized by Cycle.js (http://cycle.js.org/basic-examples.html#what-does-the-suffixed-dollar-sign-mean).\n *  For example if you pass `name$` stream - data from it would be passed as `name`.\n *\n *  It will create an observable, that will return function for rendering virtual dom with container component.\n *\n *  Container component has state - it is equal to latest combination of data from `observables`,\n *  and will be updated if state changes.\n *\n *  Also container will correctly dispose subscription to observables when unmounted from DOM.\n *\n *  ### Example:\n *\n *  ```JS\n *  import React from 'react';\n *  import {render} from 'react-dom';\n *\n *  import {Subject, Observable} from 'rxjs';\n *  import createContainer from 'rx-react-container';\n *\n *  const plusOne$ = new Subject();\n *  const minusOne$ = new Subject();\n *\n *  const totalCount$ = Observable\n *  .merge(\n *  plusOne$.map(() => +1),\n *  minusOne$.map(() => -1)\n *  )\n *  .startWith(0)\n *  .scan((acc, x) => acc + x, 0);\n *\n *  const App = ({plusOne, minusOne, totalCount}) => {\n *   return (\n *     <div>\n *       <button onClick={minusOne}>-</button>\n *       [{totalCount}]\n *       <button onClick={plusOne}>+</button>\n *     </div>\n *   );\n *  ;\n *\n *  const app$ = createContainer(App, {totalCount$}, {plusOne$, minusOne$});\n *  const appElement = document.getElementById('app');\n *  app$.forEach(renderApp=>render(renderApp(), appElement));\n *\n *  ```\n *\n * @param {React.Component} Component\n * @param {Object.<string, Observable>=} observables\n * @param {Object.<string, Observer>=} observers\n * @param {Object=} props\n */\nexport function createContainer(\n  Component,\n  observables = {},\n  observers = {},\n  props = {}\n) {\n  return defer(() => {\n    const propsObservable = combineProps(observables, observers, props).pipe(\n      share()\n    );\n\n    const initialState = {};\n\n    const renderFn = () => (\n      <RxContainer\n        props={props}\n        initialState={initialState}\n        component={Component}\n        observable={propsObservable}\n      />\n    );\n\n    return propsObservable.pipe(\n      tap(state => {\n        Object.assign(initialState, state);\n      }),\n      mapTo(renderFn),\n      distinctUntilChanged()\n    );\n  });\n}\n","import hoistStatics from 'hoist-non-react-statics';\nimport React from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, distinctUntilChanged, first, share } from 'rxjs/operators';\n\n/**\n * @param controller\n * @return {function(*=)}\n */\nexport function connect(controller) {\n  return Component => {\n    class Container extends React.Component {\n      constructor(props, context) {\n        super(props, context);\n        this.state = { props: null };\n        this.props$ = new BehaviorSubject(props);\n        this.subscription = null;\n        const stateProps$ = controller(this);\n        if (!stateProps$.subscribe) {\n          throw new Error('controller should return an observable');\n        }\n        this.stateProps$ = stateProps$.pipe(share());\n        // create subscription to get initial data\n        // not creating permanent subscription, because componentWillUnmount is not called server-side\n        // which in many cases will result in memory leak\n        this.firstSubscription = this.stateProps$.pipe(first()).subscribe(p => {\n          const newState = { props: p };\n          if (this.state.props !== null) {\n            this.setState(newState);\n          } else {\n            this.state = newState;\n          }\n        });\n      }\n\n      componentDidMount() {\n        this.subscription = this.stateProps$.subscribe(props => {\n          this.setState({ props });\n        });\n        // in case no data was received before first render - remove duplicated subscription\n        this.firstSubscription.unsubscribe();\n      }\n\n      componentDidUpdate() {\n        this.props$.next(this.props);\n      }\n\n      componentWillUnmount() {\n        this.subscription.unsubscribe();\n      }\n\n      /**\n       * Observable with prop by key\n       * @param key\n       */\n      getProp(key) {\n        return this.props$.pipe(\n          map(props => props[key]),\n          distinctUntilChanged()\n        );\n      }\n\n      /**\n       * Observable with props by keys\n       * @param keys\n       */\n      getProps(...keys) {\n        return this.props$.pipe(\n          distinctUntilChanged((p, q) => {\n            for (let i = 0, l = keys.length; i < l; i += 1) {\n              const name = keys[i];\n              if (p[name] !== q[name]) return false;\n            }\n            return true;\n          }),\n          map(props => keys.map(key => props[key]))\n        );\n      }\n\n      render() {\n        return (\n          this.state.props && React.createElement(Component, this.state.props)\n        );\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const name = Component.displayName || Component.name;\n      if (name) {\n        Container.displayName = `connect(${name})`;\n      }\n    }\n\n    return hoistStatics(Container, Component);\n  };\n}\n"],"names":["RxContainer","getDerivedStateFromProps","nextProps","prevState","observable","initialState","props","context","state","subscription","componentDidMount","subscribe","setState","componentDidUpdate","prevProps","unsubscribe","componentWillUnmount","render","React","createElement","component","Component","propTypes","PropTypes","func","isRequired","object","combineLatestObj","obj","sources","keys","key","Object","prototype","hasOwnProperty","call","push","replace","combineLatest","combination","i","length","combineProps","observables","observers","baseProps","forEach","next","value","pipe","map","newProps","of","createContainer","defer","propsObservable","share","renderFn","tap","mapTo","distinctUntilChanged","connect","controller","Container","props$","BehaviorSubject","stateProps$","Error","firstSubscription","first","newState","p","getProp","getProps","q","l","name","process","env","NODE_ENV","displayName","hoistStatics"],"mappings":"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"}